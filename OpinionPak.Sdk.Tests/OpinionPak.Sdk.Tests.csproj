<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net$(NETCoreAppMaximumVersion)</TargetFramework>
        <InvariantGlobalization>true</InvariantGlobalization>

        <IsPackable>false</IsPackable>
        <IsTestProject>true</IsTestProject>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="TUnit" />
        <PackageReference Include="Microsoft.Testing.Extensions.TrxReport" />
        <PackageReference Include="CliWrap" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Update="$(_OpinionPak_SdkPath)\OpinionPak.Sdk.csproj"
                          Targets="Build;Pack;SetPackageTargetPath" SetTargetFramework=""
                          OutputItemType="_OpinionPakSdkOutputs" />
    </ItemGroup>

    <Target Name="GenerateConstants"
            BeforeTargets="BeforeCompile;CoreCompile"
            AfterTargets="PrepareForBuild"
            DependsOnTargets="ResolveProjectReferences;GetAssemblyVersion">
        <!--        <MSBuild-->
        <!--            Projects="$(_OpinionPak_SdkPath)\OpinionPak.Sdk.csproj"-->
        <!--            Targets="Build;Pack;SetPackageTargetPath"-->
        <!--            BuildInParallel="$(BuildInParallel)"-->
        <!--            Properties="Configuration=$(Configuration)"-->
        <!--            ContinueOnError="$(ContinueOnError)">-->
        <!--            <Output TaskParameter="TargetOutputs" ItemName="_OpinionPakSdkOutputs" />-->
        <!--        </MSBuild>-->

        <PropertyGroup>
            <_OpinionPakSdkPackageTargetPath>@(_OpinionPakSdkOutputs->WithMetadataValue('MSBuildSourceTargetName', 'SetPackageTargetPath'))</_OpinionPakSdkPackageTargetPath>
        </PropertyGroup>

        <Error Text="_OpinionPakSdkPackageTargetPath was empty" Condition="'$(_OpinionPakSdkPackageTargetPath)' == ''" />

        <PropertyGroup>
            <GeneratedConstantsFile>$(IntermediateOutputPath)$(MSBuildProjectName).Constants.g.cs</GeneratedConstantsFile>

            <_ConstantsLines><![CDATA[
// <auto-generated/>

namespace $(RootNamespace);

internal static partial class Constants
{
    public const string Version = @"$(Version)";
    public const string NetSdkPath = @"$(NetCoreRoot)/sdk/$(NETCoreSdkVersion)";
    public const string DirectorySdkPropsPath = @"$([MSBuild]::GetPathOfFileAbove(Directory.Sdk.props))";
    public const string OpinionPakSdkPackagePath = @"$(_OpinionPakSdkPackageTargetPath)";
}
]]></_ConstantsLines>
        </PropertyGroup>

        <WriteLinesToFile
            File="$(GeneratedConstantsFile)"
            Lines="$([MSBuild]::Escape($(_ConstantsLines)))"
            Overwrite="true"
            WriteOnlyWhenDifferent="true" />

        <ItemGroup>
            <Compile Include="$(GeneratedConstantsFile)" />
            <FileWrites Include="$(GeneratedConstantsFile)" />
        </ItemGroup>
    </Target>
</Project>
