<Project>
    <Target Name="GenerateRootEditorConfigFile"
            BeforeTargets="BeforeCompile;CoreCompile"
            DependsOnTargets="$(_OpinionPak_TasksDependsOn)"
            Condition="'$(GenerateRootEditorConfig)' == 'true' and '$(_OpinionPak_IgnoreTasks)' != 'true'">
        <GetDirectoryNameOfFilePatternAbove
            Condition="$(SolutionDir) == '' or $(SolutionDir) == '*Undefined*'"
            StartingDirectory="$(MSBuildProjectDirectory)" SearchPattern="*.sln">
            <Output TaskParameter="DirectoryName" PropertyName="SolutionDir" />
        </GetDirectoryNameOfFilePatternAbove>

        <!-- TODO better error message -->
        <Error Text="SolutionDir was not set and couldn't be found automatically" Condition="'$(RootEditorConfigFile)' == '' and '$(SolutionDir)' == ''" />

        <PropertyGroup>
            <SolutionDir>$([MSBuild]::EnsureTrailingSlash('$(SolutionDir)'))</SolutionDir>
        </PropertyGroup>

        <PropertyGroup>
            <RootEditorConfigFile Condition="'$(RootEditorConfigFile)' == ''">$(SolutionDir).editorconfig</RootEditorConfigFile>

            <_RootEditorConfigHeader># Auto generated by OpinionPak</_RootEditorConfigHeader>

            <_ExistingRootEditorConfig Condition="Exists('$(RootEditorConfigFile)')">$([System.IO.File]::ReadAllText('$(RootEditorConfigFile)'))</_ExistingRootEditorConfig>
        </PropertyGroup>

        <!-- TODO better error message -->
        <Error Text=".editorconfig already exists" Condition="'$(_ExistingRootEditorConfig)' != '' and !$(_ExistingRootEditorConfig.StartsWith('$(_RootEditorConfigHeader)'))" />

        <ItemGroup>
            <_RootEditorConfig Include="$(_RootEditorConfigHeader)" />
            <_RootEditorConfig Include="root = true" />
        </ItemGroup>

        <ItemGroup>
            <_EditorConfigFiles Include="$(_OpinionPak_SdkPath)\Configuration\*.editorconfig" />
            <_RootEditorConfig Include="$(_NewLine)$([System.IO.File]::ReadAllText('%(_EditorConfigFiles.FullPath)'))" />
        </ItemGroup>

        <ItemGroup Condition="Exists('$(SolutionDir)project.editorconfig')">
            <_RootEditorConfig Include="$(_NewLine)## Imported from project.editorconfig" />
            <_RootEditorConfig Include="$([System.IO.File]::ReadAllText('$(SolutionDir)project.editorconfig'))" />
        </ItemGroup>

        <WriteLinesToFile File="$(RootEditorConfigFile)"
                          Lines="@(_RootEditorConfig)"
                          Overwrite="true"
                          WriteOnlyWhenDifferent="true" />

        <ItemGroup>
            <FileWrites Include="$(RootEditorConfigFile)" />
        </ItemGroup>
    </Target>
</Project>
