<Project Sdk="OpinionPak.Sdk/0.1.0-ci.47">
    <PropertyGroup>
        <IsMSBuildTasksProject>true</IsMSBuildTasksProject>
        <TargetNetSdk>$(MinimumNetSdk)</TargetNetSdk>
        <IsPackable>true</IsPackable>

        <Description>My .NET opinions packaged as a MSBuild SDK</Description>
        <PackageType>MSBuildSdk</PackageType>

        <GenerateRootEditorConfig>false</GenerateRootEditorConfig>
    </PropertyGroup>

    <ItemGroup>
        <None Include="Sdk\**" Pack="true" PackagePath="Sdk\" />
        <None Include="Configuration\**" Pack="true" PackagePath="Configuration\" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="NuGet.Versioning" PrivateAssets="all" />
        <PackageReference Include="NuGet.ProjectModel" PrivateAssets="all" />
    </ItemGroup>

    <!-- Use NuGet libraries from .NET SDK -->
    <ItemGroup Condition="'$(TargetFrameworkIdentifier)' != '.NETFramework'">
        <PackageReference Update="NuGet.Versioning" ExcludeAssets="runtime" />
        <PackageReference Update="NuGet.ProjectModel" ExcludeAssets="runtime" />
    </ItemGroup>

    <!-- Unlike unixes, Windows treats file locks seriously so we have to move the output first as dotnet's build-server could still be holding onto it -->
    <Target Name="UnlockOutput"
            BeforeTargets="CopyFilesToOutputDirectory"
            Condition="$([MSBuild]::IsOSPlatform('Windows')) and Exists('$(TargetPath)')">
        <PropertyGroup>
            <TempTargetPath>$([System.IO.Path]::GetTempPath())\$(AssemblyName)\$([System.IO.Path]::GetRandomFileName()).dll</TempTargetPath>
        </PropertyGroup>

        <Delete Files="$(TargetPath)" ContinueOnError="true" />
        <Move SourceFiles="$(TargetPath)" DestinationFiles="$(TempTargetPath)" Condition="'$(MSBuildLastTaskResult)' == 'false'" />
    </Target>
</Project>
